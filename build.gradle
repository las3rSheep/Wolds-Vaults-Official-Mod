buildscript {
    ext.kotlin_version = '1.9.21'
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

apply plugin: 'org.spongepowered.mixin'
apply plugin: 'kotlin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

group = mod_group_id
version = mod_version

base {
    archivesName = "wolds-vaults-official-mod"
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}
jarJar.enable()
minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // official   MCVersion             Official field/method names from Mojang mapping files
    // parchment  YYYY.MM.DD-MCVersion  Open community-sourced parameter names and javadocs layered on top of official
    //
    // You must be aware of the Mojang license when using the 'official' or 'parchment' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Parchment is an unofficial project maintained by ParchmentMC, separate from MinecraftForge
    // Additional setup is needed to use their mappings: https://parchmentmc.org/docs/getting-started
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'parchment', version: '2022.08.07-1.18.2'

    // When true, this property will have all Eclipse/IntelliJ IDEA run configurations run the "prepareX" task for the given run configuration before launching the game.
    // enableEclipsePrepareRuns = true
    // enableIdeaPrepareRuns = true

    // This property allows configuring Gradle's ProcessResources task(s) to run on IDE output locations before launching the game.
    // It is REQUIRED to be set to true for this template to function.
    // See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
    copyIdeResources = true

    // When true, this property will add the folder name of all declared run configurations to generated IDE run configurations.
    // The folder name can be set on a run configuration using the "folderName" property.
    // By default, the folder name of a run configuration is the name of the Gradle project containing it.
    // generateRunFolders = true

    // This property enables access transformers for use in development.
    // They will be applied to the Minecraft artifact.
    // The access transformer file can be anywhere in the project.
    // However, it must be at "META-INF/accesstransformer.cfg" in the final mod jar to be loaded by Forge.
    // This default location is a best practice to automatically put the file in the right place in the final jar.
    // See https://docs.minecraftforge.net/en/latest/advanced/accesstransformers/ for more information.
     accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        // applies to all the run configs below
        configureEach {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'


            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', mod_id
            jvmArg "-XX:+AllowEnhancedClassRedefinition"
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            // example of overriding the workingDirectory set in configureEach above
            workingDirectory project.file('run-data')

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"

    config "${mod_id}.mixins.json"
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html#sub:flat_dir_resolver
    // flatDir {
    //     dir 'libs'
    // }
    flatDir {
        dir 'libs'
    }
    maven { url = "https://jitpack.io" }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        // location of the maven that hosts JEI files before January 2023
        name = "Progwml6's maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven { url 'https://maven.fallenbreath.me/releases' }
    maven { url = 'https://maven.melanx.de/' }
    mavenCentral()
}


dependencies {
    implementation 'org.jetbrains:annotations:24.0.0'

    // Specify the version of Minecraft to use.
    // Any artifact can be supplied so long as it has a "userdev" classifier artifact and is a compatible patcher artifact.
    // The "userdev" classifier will be requested and setup by ForgeGradle.
    // If the group id is "net.minecraft" and the artifact id is one of ["client", "server", "joined"],
    // then special handling is done to allow a setup of a vanilla dependency without the use of an external repository.
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    //implementation fg.deobf('curse.maven:vault-hunters-official-mod-458203:5621637')
    implementation fg.deobf("curse.maven:vaultfaster-988487:5923993")
    implementation fg.deobf('curse.maven:hostile-neural-networks-552574:3717871')
    implementation fg.deobf('curse.maven:placebo-283644:4500363')
    implementation fg.deobf('curse.maven:lightmans-currency-472521:4977514')
    implementation fg.deobf('curse.maven:curios-309927:4985315')
    implementation fg.deobf('curse.maven:corpse-316582:3694258')
    implementation fg.deobf('curse.maven:open-parties-and-claims-636608:4982642')
    implementation fg.deobf('curse.maven:better-combat-by-daedelus-639842:4428885')
    implementation fg.deobf('curse.maven:cooking-for-blockheads-231484:4065856')
    implementation fg.deobf('curse.maven:scannable-266784:3738448')
    implementation fg.deobf('curse.maven:parcool-482378:4944977')
    implementation fg.deobf('curse.maven:ecologics-570463:4171283')
    implementation fg.deobf('curse.maven:alexs-mobs-426558:3853078')
    implementation fg.deobf('curse.maven:the-wild-backport-537901:3988035')
    implementation fg.deobf('curse.maven:quark-243121:3840125')
    implementation fg.deobf('curse.maven:applied-energistics-2-223794:4136407')
    implementation fg.deobf('curse.maven:alexs-cloud-storage-606618:3757407')
    implementation fg.deobf('curse.maven:ensorcellation-349447:4782920')
    implementation fg.deobf('curse.maven:cofh-core-69162:4801048')
    implementation fg.deobf('curse.maven:pehkui-319596:4823461')
    implementation fg.deobf('curse.maven:angel-ring-333396:4641783')
    implementation fg.deobf('curse.maven:refined-storage-243076:4902316')
    implementation fg.deobf('curse.maven:atomicstrykers-infernal-mobs-227875:4149699')
    implementation fg.deobf('curse.maven:balm-531761:4442615')
    implementation fg.deobf('curse.maven:secretroomsmod-59652:3764897')
    implementation fg.deobf("curse.maven:incorporeal-3-616485:3944433")
    implementation fg.deobf("curse.maven:botania-225643:3936568")
    implementation fg.deobf("curse.maven:integrated-terminals-295910:5264606")
    implementation fg.deobf("curse.maven:cyclops-core-232758:5262021")
    implementation fg.deobf("curse.maven:sophisticatedcore-618298:4913626")
    implementation fg.deobf("curse.maven:item-borders-513769:3583942")
    implementation fg.deobf("curse.maven:vaultarhud-1011085:5706845")
    implementation fg.deobf("curse.maven:toms-storage-378609:5211203")
    implementation fg.deobf("curse.maven:rftoolstorage-350006:4069708")
    implementation fg.deobf("curse.maven:rftoolsbase-326041:4373521")
    implementation fg.deobf("curse.maven:vault-filters-952507:5925682")
    implementation fg.deobf("curse.maven:create-328085:4835188")
    implementation fg.deobf("curse.maven:pneumaticcraft-repressurized-281849:4922258")
    implementation fg.deobf("curse.maven:just-enough-vh-1035310:5428032")
    implementation fg.deobf("curse.maven:dimensional-worldborder-631202:3832850")
    implementation fg.deobf("curse.maven:immersive-engineering-231951:4412849")
    implementation fg.deobf("curse.maven:industrial-foregoing-266515:5334842")
    implementation fg.deobf("curse.maven:titanium-287342:5151207")
    implementation fg.deobf("curse.maven:travel-anchors-413234:3741307")
    implementation fg.deobf("curse.maven:advanced-peripherals-431725:4684137")
    implementation fg.deobf("curse.maven:integrated-dynamics-236307:5262070")
    implementation fg.deobf("curse.maven:common-capabilities-247007:4987177")
    implementation fg.deobf("curse.maven:integrated-tunnels-251389:5314661")
    implementation fg.deobf("curse.maven:thermal-foundation-222880:4788649")
    implementation fg.deobf("io.github.noeppi_noeppi.mods:LibX:1.18.2-3.2.2")
    implementation fg.deobf("curse.maven:sophisticated-backpacks-422301:4950560")
    implementation fg.deobf("curse.maven:sophisticated-storage-619320:4950570")
    implementation fg.deobf("curse.maven:supplementaries-412082:4548315")
    implementation fg.deobf("curse.maven:modular-routers-250294:4984984")
    implementation fg.deobf("curse.maven:emojiful-284324:3732908")
    implementation fg.deobf("curse.maven:vault-autocrafting-fix-1096429:5695962")
    implementation fg.deobf("curse.maven:daves-potioneering-639653:4788622")
    implementation fg.deobf("curse.maven:grimoire-of-gaia-228948:5678608")
    implementation fg.deobf("curse.maven:tropicraft-254794:4616839")
    implementation fg.deobf("curse.maven:better-tridents-666941:4707885")
    implementation fg.deobf("curse.maven:puzzles-lib-495476:5114509")

    implementation fg.deobf("curse.maven:vault-hunters-api-1118899:6036598")
    compileOnly fg.deobf("curse.maven:hexal-824725:5099219")
    implementation fg.deobf("curse.maven:occultism-361026:4729072")
    implementation fg.deobf("curse.maven:ars-nouveau-401955:4543053")
    implementation fg.deobf("curse.maven:custom-starter-gear-253735:4683370")
    implementation fg.deobf("curse.maven:qol-hunters-1093452:5943142")
    compileOnly "curse.maven:citadel4-331936:3683009" // change to 3548061
    runtimeOnly "curse.maven:citadel4-331936:3683009"
    // compile against the JEI API but do not include it at runtime
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
    // at runtime, use the full JEI jar for Forge
    //runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")
    compileOnly(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-common:0.2.0"))
    implementation(jarJar("com.github.bawnorton.mixinsquared:mixinsquared-forge:0.2.0")) {
        jarJar.ranged(it, "[0.2.0,)")
    }
    compileOnly annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.3")
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.3.3")) {
        jarJar.ranged(it, "[0.3.3,)")
    }
    implementation 'me.fallenbreath:conditional-mixin-forge:0.6.2'
    implementation fg.deobf('local:forgified-sgui:1.0.2')
    implementation fg.deobf("curse.maven:vault-hunters-official-mod-458203:5925633")
    jarJar(group: 'me.fallenbreath', name: 'conditional-mixin-forge', version: '[0.6.2,)') {
        jarJar.pin(it, '0.6.2')
    }

    jarJar(group: 'eu.pb4', name: 'forgified-sgui', version: '[1.0.2,)') {
        jarJar.pin(it, '1.0.2')
    }
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"



    // dev
    runtimeOnly fg.deobf("curse.maven:geckolib-388172:4181370")
    runtimeOnly fg.deobf("curse.maven:selene-499980:5660287")
    runtimeOnly fg.deobf("curse.maven:patchouli-306770:3846086")
    runtimeOnly fg.deobf("curse.maven:citadel-331936:3783096")
    runtimeOnly fg.deobf("curse.maven:terrablender-563928:3957976")
    runtimeOnly fg.deobf("curse.maven:autoreglib-250363:3642382")
    runtimeOnly fg.deobf("curse.maven:cc-tweaked-282001:4630521")
    runtimeOnly fg.deobf("curse.maven:mcjtylib-233105:4277564")
    runtimeOnly fg.deobf("curse.maven:smartbrainlib-661293:4458592")
    runtimeOnly fg.deobf("curse.maven:cloth-config-348521:5729090")
    runtimeOnly fg.deobf("curse.maven:playeranimator-658587:4418152")
    runtimeOnly fg.deobf("curse.maven:modonomicon-538392:4641770")
    runtimeOnly fg.deobf("curse.maven:iceberg-520110:4035917")
    runtimeOnly fg.deobf("curse.maven:storage-drawers-223852:3807626") // qolhunters mixin
    runtimeOnly fg.deobf("curse.maven:kotlin-for-forge-351264:4513187") // vaultfaster
    runtimeOnly fg.deobf("curse.maven:jei-238222:4351311")
    runtimeOnly fg.deobf("curse.maven:auxblocks-711533:4358959")

    // perf in dev
    runtimeOnly fg.deobf("curse.maven:lazydfu-433518:3209972")
    runtimeOnly fg.deobf("curse.maven:embeddium-908741:5322305")

}


tasks.jar.archiveClassifier.set('slim')
tasks.jarJar.archiveClassifier.set('')

// This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }}

// Example for how to get properties into the manifest for reading at runtime.
tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title": mod_id,
                "Specification-Vendor": mod_authors,
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    // This is the preferred method to reobfuscate your jar file
    finalizedBy 'reobfJar'
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
kotlin {
    jvmToolchain(17)
}
